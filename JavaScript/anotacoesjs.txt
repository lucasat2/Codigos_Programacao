ASPAS DUPLAS 
permite colocar um texto dentro de outro 
ex: "LUCAS 'Ataide'"
==========================================
CRASE 
`` utilizadas para template strings 
==========================================
REPOSITORIO GITHUB
https://github.com/luizomf/curso-js
==========================================
COMENTARIOS 
// este é um comentario de linha 
/**/ este é um comentario multiplas linhas
==========================================
GERAR CODIGO HTML AUTOMATICAMENTE 
digitar ! ou html:5
==========================================
LINKAR HTML COM JS COM A TAG SCRIPT
<script src="index.js"></script>
==========================================
ALERTA NA TELA 
alert('');
==========================================
VARIAVEIS 
let nome = 'Lucas';
console.log('meu nome é:',nome);
==========================================
CONSTANTES 
const nome = 'Lucas';
console.log('meu nome é:',nome);
//seu valor nao pode ser modificado
=================t=========================
DESCOBRIR O TIPO DO DADO 
const nome = 'Lucas'
console.log(typeof nome)
==========================================
VAR E LET
utilizar somente let
==========================================
OPERADORES 
** potenciacao
% resto divisao
==========================================
INCREMENTO
let contador = 0 
pre incremento ++ contador 
pos incremento contador ++ 
contador += 2;
contador *=2; 
console.log(contador);
==========================================
CONVERSAO DE STRING PARA NUMERO INTEIRO 
const num1 = 10;
const num2 = parseInt('5');
console.log(num1 + num2);
console.log(typeof num2)
==========================================
ALERT,PROPMT e CONFIRM

alert('olá mundo!'); exibe caixa de mensagem apenas.

confirm('Confirma que deseja apagar?'); pede uma confirmacao

prompt('digite um numero'); - Perunta algo ao usuario, sempre retorna string, por isso é necessario converter.
==========================================
SINTAXE TEMPLATE STRING 
console.log(`O resultado foi ${num1 + num2}.`);
==========================================
 FUNCOES MATH 

 ntitulo.innerHTML = numero;
texto.innerHTML = ' ';
texto.innerHTML += `<p>O numero mais + 2 é: ${numero + 2}<p>`;
texto.innerHTML += `<p> Raiz quadrada: ${Math.sqrt(numero)}<p>`;
texto.innerHTML += `<p> O numero é inteiro?  ${Number.isInteger(numero)}<p>`;
texto.innerHTML += `<p> É NaN?: ${Number.isNaN(numero)}<p>`;
texto.innerHTML += `<p> Arredondando pra baixo: ${Math.floor(numero)}<p>`;
texto.innerHTML += `<p> Arredondando pra cima: ${Math.ceil(numero)}<p>`;
texto.innerHTML += `<p> Com duas casas decimais: ${(numero.toFixed(2))}<p>`;
==========================================
ARRAYS 

const alunos = ['Lucas','Alfredo','Beltrano','Magnata']
Adiciona no inicio  array.unshift();
Adiciona no fim array.push();
remove ultimo elemento array.pop()
fatiar  - console.log(array.slice(0,3));
acessar indice - console.log(array[8]);

==========================================
PASSAGEM POR VALOR E REFERENCIA 

Valores primitivos sao copiados e independentes 
valores por referencia apontam para o mesmo lugar na memoria 
==========================================